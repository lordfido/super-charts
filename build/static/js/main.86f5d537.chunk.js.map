{"version":3,"sources":["types/index.ts","utils/localStorage.ts","apiClient/types/index.ts","apiClient/types/parameters.ts","types/localStorage.ts","apiClient/axiosInstance.ts","styles/colors.ts","styles/skin.ts","components/Typography/index.tsx","apiClient/constants/endpoints.ts","apiClient/index.ts","modelCreators/index.ts","hooks/sizes.ts","components/Button/index.tsx","components/Tabs/Tab.tsx","components/Tabs/index.tsx","utils/objects.ts","hooks/tabs.tsx","assets/logo.svg","styles/zIndex.ts","layouts/MainLayout/components/Header/index.tsx","layouts/MainLayout/index.tsx","utils/formatters.ts","utils/dates/index.ts","assets/icons/Calendar.tsx","components/Forms/Datepicker/index.tsx","components/Forms/styles.ts","utils/validations/dates.ts","components/Toolbar/index.tsx","containers/Homescreen/components/Header/index.tsx","components/Card/index.tsx","constants/units.ts","components/Grid/index.tsx","components/Kpi/index.tsx","components/Charts/utils.ts","components/Charts/AreaChart/index.tsx","components/Charts/BarChart/index.tsx","utils/repoNames.ts","components/LoadingIndicator/index.tsx","containers/Homescreen/components/TabContent/index.tsx","components/Forms/Dropdown/index.tsx","containers/Homescreen/components/TabsSection/index.tsx","containers/Homescreen/index.tsx","routes.ts","hooks/metrics.ts","constants/clientRoutes.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["setCookie","key","value","expiration","undefined","global","document","cookie","defaultExpiration","Date","getTime","toString","setItem","localStorage","getItem","cookies","split","length","values","find","c","includes","getCookie","Granularity","PullRequestMetric","Repository","LOCAL_STORAGE_KEY","config","WHITE","GREY","BLUE","ORANGE","DEFAULT_BG","DEFAULT_COLOR","HEADER_BORDER","HEADER_COLOR","TITLE1_COLOR","BUTTON_BG_PRIMARY","BUTTON_BORDER","BUTTON_BORDER_HOVER","BUTTON_COLOR","TAB_BORDER","TAB_BORDER_ACTIVE","TAB_COLOR","TAB_COLOR_ACTIVE","CARD_BORDER","CARD_TITLE_COLOR","INPUT_BG","INPUT_BORDER","INPUT_BORDER_HOVER","INPUT_COLOR","DATEPICKER_PANEL_BG","DATEPICKER_PANEL_COLOR","DATEPICKER_WEEKDAY_COLOR","DATEPICKER_DAY_BG_SELECTED","DATEPICKER_DAY_BG_ACTIVE","DATEPICKER_DAY_COLOR","DATEPICKER_DAY_COLOR_DISABLED","DROPDOWN_BG","DROPDOWN_COLOR","DROPDOWN_ITEM_BG_HOVER","DROPDOWN_ITEM_COLOR","BARCHART_GRID_COLOR","BARCHART_AXIS_COLOR","BARCHART_BAR_BG","LINECHART_GRID_COLOR","LINECHART_LINE_COLOR","LINECHART_REFERENCELINE_COLOR","KPI_BG","KPI_COLOR","KPI_VALUE_COLOR","title1Style","css","Typography","children","styles","type","getStyles","PULL_REQUESTS","method","path","http","axios","create","baseURL","headers","apiClient","metrics","getRepositoryPullRequestsMetrics","params","a","response","data","createMetricsFromServer","calculated","createDateToServer","date","yyyy","getFullYear","padStart","MM","getMonth","dd","getDate","createPullRequestParamsToServer","granularities","dateFrom","dateTo","metric","groupByRepository","for","repositories","athenianApi","metadata","infraestructure","athenianWebapp","repogroups","account","exclude_inactive","timezone","date_from","date_to","useResize","element","useState","screenWidth","screenHeight","ratiowh","ratiohw","rect","sizes","setSizes","onResize","window","innerWidth","innerHeight","current","clientRect","getBoundingClientRect","width","height","left","right","top","bottom","useEffect","addEventListener","removeEventListener","buttonStyles","Button","onClick","primary","small","className","tabStyle","Tab","active","tabsStyle","Tabs","getEnumLabelFromValue","str","map","word","toUpperCase","join","getEnumValueFromLabel","toLowerCase","replace","tabsBar","tabHasBeenSetup","tabName","lowerCaseName","exists","containsInitialName","useDynamicTabs","persistedTabs","setPersistedTabs","persistedTabsStr","tabs","JSON","parse","persistTabs","stringify","usePersistedTabs","setTabs","setActive","activateTab","tab","createTab","activeTab","removeActiveTab","tabIndex","findIndex","t","newTabs","filter","renderTabs","renameTab","newName","updatedTabs","layers","getLayerPosition","layer","l","headerStyle","headerSpacerStyle","Header","href","target","rel","src","logo","alt","mainLayoutStyle","MainLayout","toDecimals","num","decimals","minDecimals","toLocaleString","maximumFractionDigits","minimumFractionDigits","getDefaultDateRange","today","now","startDate","endDate","getLargestAvailableTimeUnit","seconds","maxHours","maxMinutes","maxSeconds","days","daysInMs","Number","hours","CalendarIcon","focusable","viewBox","d","datePickerField","defaultStart","defaultEnd","DatePicker","error","isClearable","onChange","range","setStartDate","setEndDate","newStartDate","newEndDate","setNewDates","open","setOpen","err","setErr","handleChange","newValue","start","finish","diff","difference","isValidRange","handleCancel","Calendar","dateFormat","maxDate","getMaxDate","monthsShown","onClickOutside","onInputClick","showDisabledMonthNavigation","selected","selectsRange","toolbarStyle","Toolbar","fullWidth","onDateRangeChange","cardStyle","Card","title","units","prLeadTime","prLeadCount","prLeadCountQ","prAllCount","prCycleTime","prWipTime","prWipCount","prWipCountQ","prWipPendingCount","prReviewTime","prReviewCount","prReviewCountQ","prReviewPendingCount","prMergingTime","prMergingCount","prMergingCountQ","prMergingPendingCount","prReleaseTime","prReleaseCount","prReleaseCountQ","prReleasePendingCount","prRejected","prOpened","getUnits","Grid","columns","gridStyle","kpiStyle","Kpi","label","formatTick","formatTooltip","name","unit","lineChartStyle","AreaChart","parentRef","useRef","metricName","dataPoints","point","parseInt","averageValue","reduce","avg","avgKpi","maxValue","max","maxKpi","ref","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","stroke","XAxis","dataKey","tickCount","tickLine","YAxis","tickFormatter","v","Tooltip","formatter","ReferenceLine","strokeDasharray","strokeWidth","y","Area","dot","fill","fillOpacity","barChartStyle","BarChart","dataBars","bar","vertical","Bar","maxBarSize","LoadingIdicator","MetricCharts","aggregatedMetrics","groupedMetrics","loadingAggregated","loadingGrouped","Dropdown","isMultiple","options","placeholder","isMulti","actionMeta","Array","control","base","props","backgroundColor","border","isFocused","menuIsOpen","borderRadius","boxShadow","fontSize","maxWidth","borderColor","valueContainer","color","indicatorsContainer","indicatorSeparator","display","dropdownIndicator","menu","minWidth","menuList","paddingBottom","paddingTop","option","alignItems","borderBottom","cursor","lineHeight","minHeight","padding","wordBreak","overflow","borderTop","TabsSection","activeTabHasBeenSetup","onMetricChange","metricOptions","useMemo","object","Object","val","opt","homescreenStyle","routes","Component","s","e","dateRange","setDateRange","setLoadingAggregated","setAggregatedMetrics","fetchAggregatedMetrics","filters","alignedWeek","prMetrics","console","setLoadingGrouped","setGroupedMetrics","fetchGroupedMetrics","all","usePullRequestMetrics","exact","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86f5d537.chunk.js","sourcesContent":["export * from './localStorage';\r\nexport * from './models';\r\nexport * from './network';\r\n","import { LOCAL_STORAGE_KEY } from '../types';\r\n\r\nconst expirationTime = 24 * 60 * 60 * 1000;\r\n\r\nconst setCookie = (key: LOCAL_STORAGE_KEY, value: string, expiration?: Date) => {\r\n  if (global.document?.cookie !== undefined) {\r\n    const defaultExpiration = expiration || new Date(new Date().getTime() + expirationTime);\r\n    global.document.cookie = `${ key }=${ value };Path=/;Expires=${ defaultExpiration.toString() }`;\r\n  }\r\n};\r\n\r\nconst getCookie = (key: LOCAL_STORAGE_KEY) => {\r\n  const cookies = global.document?.cookie.split(';');\r\n\r\n  if (!cookies || !cookies.length) {\r\n    return '';\r\n  }\r\n\r\n  const selectedCookie = cookies.find(c => c.includes(key)) || '';\r\n  const values = selectedCookie.split('=');\r\n  return values?.[1] ?? '';\r\n};\r\n\r\nconst deleteCookie = (key: LOCAL_STORAGE_KEY) => {\r\n  setCookie(key, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'));\r\n};\r\n\r\n/**\r\n * If localStorage is supported, store key-value in localstorage.\r\n * Else, it will store it in cookies\r\n */\r\nexport const setItem = (key: LOCAL_STORAGE_KEY, value: string) => {\r\n  if (global?.localStorage) {\r\n    global.localStorage.setItem(key, value);\r\n  } else {\r\n    setCookie(key, value);\r\n  }\r\n};\r\n\r\n/**\r\n * If localStorage is supported, read key-value from localstorage.\r\n * Else, it will read it from cookies\r\n */\r\nexport const getItem = (key: LOCAL_STORAGE_KEY) => {\r\n  if (global?.localStorage) {\r\n    return global.localStorage.getItem(key) ?? '';\r\n  }\r\n\r\n  return getCookie(key) ?? '';\r\n};\r\n\r\n\r\n/**\r\n * If localStorage is supported, remove key from localstorage.\r\n * Else, it will remove it from cookies\r\n */\r\nexport const removeItem = (key: LOCAL_STORAGE_KEY) => {\r\n  if (global?.localStorage) {\r\n    global.localStorage.removeItem(key);\r\n  } else {\r\n    deleteCookie(key);\r\n  }\r\n};","export * from './models';\r\nexport * from './parameters';\r\n\r\nexport type Method = 'get' | 'post' | 'patch' | 'put' | 'delete';\r\n\r\nexport interface Endpoint {\r\n  method: Method;\r\n  path: string;\r\n}","export enum Granularity {\r\n  all = 'all',\r\n  alignedWeek = 'aligned week',\r\n  alignedMonth = 'aligned month',\r\n  alignedYear = 'aligned year',\r\n  day = 'day',\r\n  week = 'month',\r\n  month = 'year',\r\n  year = 'year',\r\n}\r\n\r\nexport enum PullRequestMetric {\r\n  prLeadTime = \"pr-lead-time\",\r\n  prLeadCount = \"pr-lead-count\",\r\n  prLeadCountQ = \"pr-lead-count-q\",\r\n  prAllCount = \"pr-all-count\",\r\n  prCycleTime = \"pr-cycle-time\",\r\n  prWipTime = \"pr-wip-time\",\r\n  prWipCount = \"pr-wip-count\",\r\n  prWipCountQ = \"pr-wip-count-q\",\r\n  prWipPendingCount = \"pr-wip-pending-count\",\r\n  prReviewTime = \"pr-review-time\",\r\n  prReviewCount = \"pr-review-count\",\r\n  prReviewCountQ = \"pr-review-count-q\",\r\n  prReviewPendingCount = \"pr-review-pending-count\",\r\n  prMergingTime = \"pr-merging-time\",\r\n  prMergingCount = \"pr-merging-count\",\r\n  prMergingCountQ = \"pr-merging-count-q\",\r\n  prMergingPendingCount = \"pr-merging-pending-count\",\r\n  prReleaseTime = \"pr-release-time\",\r\n  prReleaseCount = \"pr-release-count\",\r\n  prReleaseCountQ = \"pr-release-count-q\",\r\n  prReleasePendingCount = \"pr-release-pending-count\",\r\n  prRejected = \"pr-rejected\",\r\n  prOpened = \"pr-opened\",\r\n}\r\n\r\nexport enum Repository {\r\n  athenianApi = \"github.com/athenianco/athenian-api\",\r\n  athenianWebapp = \"github.com/athenianco/athenian-webapp\",\r\n  infraestructure = \"github.com/athenianco/infrastructure\",\r\n  metadata = \"github.com/athenianco/metadata\"\r\n}\r\n","export enum LOCAL_STORAGE_KEY {\r\n  tabs = 'reposStats_tabs'\r\n}\r\n","import axios, { AxiosInstance, AxiosRequestConfig } from \"axios\";\r\nimport { BASE_URL } from \"./constants/endpoints\";\r\n\r\n/**\r\n * Generates a custom axios instance to be persisted in memory.\r\n * This will allow us to use interceptors or custom headers without\r\n * the need to add them by request\r\n */\r\nconst createInstance = (config?: AxiosRequestConfig): AxiosInstance =>\r\n  axios.create({\r\n    ...config,\r\n    baseURL: BASE_URL,\r\n    headers: {\r\n      ...config?.headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n  });\r\n\r\n/**\r\n * Axios HTTP client\r\n */\r\nexport const http = createInstance();\r\n","/*\r\n * This file contains the color's palette\r\n * the application will use. They are agnostic\r\n * and are not associated to any component.\r\n */\r\n\r\nexport const WHITE = '#FFF';\r\nexport const BLACK = '#000';\r\n\r\nexport const GREY = {\r\n  50: '#FAFAFB',\r\n  60: '#F3F3F5',\r\n  65: '#E7E7EC',\r\n  70: '#E4E7E7',\r\n  100: '#DBDBDB',\r\n  120: '#CACCCD',\r\n  200: '#C4C4C4',\r\n  400: '#8889A1',\r\n  500: '#858796',\r\n  550: '#757575',\r\n  600: '#6C6C70',\r\n  700: '#484848',\r\n};\r\n\r\nexport const BLUE = {\r\n  50: '#C0C1CE',\r\n  500: '#147EEC',\r\n  800: '#121343'\r\n};\r\n\r\nexport const ORANGE = {\r\n  300: '#FFA008',\r\n  400: '#FF7427',\r\n};\r\n\r\nexport const RED = {\r\n  400: '#EF3837',\r\n};\r\n","/*\r\n * This file contains the color's scheme\r\n * the application will use. All of them are\r\n * associated to a particular component based\r\n * on its name.\r\n * \r\n * This way:\r\n * - We have a central place where all colors are registered.\r\n * - We can make that Component1's background is the same color than Component2's background.\r\n * - We can update Component1's background without affecting Component2's background.\r\n */\r\n\r\nimport { BLUE, GREY, ORANGE, RED, WHITE } from \"./colors\";\r\n\r\nexport const DEFAULT_BG = GREY[50];\r\nexport const DEFAULT_COLOR = GREY[500];\r\n\r\nexport const HEADER_BG = WHITE;\r\nexport const HEADER_BORDER = GREY[100];\r\nexport const HEADER_COLOR = GREY[400];\r\n\r\nexport const TITLE1_COLOR = BLUE[800];\r\n\r\nexport const BUTTON_BG = WHITE;\r\nexport const BUTTON_BG_PRIMARY = ORANGE[400];\r\nexport const BUTTON_BORDER = GREY[70];\r\nexport const BUTTON_BORDER_HOVER = GREY[200];\r\nexport const BUTTON_COLOR = GREY[550];\r\nexport const BUTTON_COLOR_PRIMARY = WHITE;\r\n\r\nexport const TAB_BORDER = GREY[65];\r\nexport const TAB_BORDER_ACTIVE = ORANGE[300];\r\nexport const TAB_COLOR = GREY[400];\r\nexport const TAB_COLOR_ACTIVE = BLUE[800];\r\n\r\nexport const CARD_BG = WHITE;\r\nexport const CARD_BORDER = GREY[100];\r\nexport const CARD_TITLE_COLOR = BLUE[800];\r\n\r\nexport const INPUT_BG = WHITE;\r\nexport const INPUT_BORDER = GREY[100];\r\nexport const INPUT_BORDER_HOVER = BLUE[50];\r\nexport const INPUT_COLOR = BLUE[800];\r\nexport const INPUT_COLOR_DISABLED = GREY[120];\r\n\r\nexport const ERROR_COLOR = RED[400];\r\n\r\nexport const DATEPICKER_PANEL_BG = GREY[50];\r\nexport const DATEPICKER_PANEL_COLOR = INPUT_COLOR;\r\n\r\nexport const DATEPICKER_WEEKS_BG = GREY[60];\r\nexport const DATEPICKER_WEEKS_BG_HOVER = WHITE;\r\nexport const DATEPICKER_WEEKS_COLOR = GREY[400];\r\n\r\nexport const DATEPICKER_WEEKDAY_COLOR = GREY[400];\r\n\r\nexport const DATEPICKER_DAY_BG = 'transparent';\r\nexport const DATEPICKER_DAY_BG_SELECTED = ORANGE[300];\r\nexport const DATEPICKER_DAY_BG_ACTIVE = ORANGE[400];\r\n\r\nexport const DATEPICKER_DAY_COLOR = GREY[700];\r\nexport const DATEPICKER_DAY_COLOR_SELECTED = WHITE;\r\nexport const DATEPICKER_DAY_COLOR_ACTIVE = WHITE;\r\nexport const DATEPICKER_DAY_COLOR_DISABLED = INPUT_COLOR_DISABLED;\r\n\r\nexport const DATEPICKER_ACTIONS_BG = WHITE;\r\n\r\nexport const DROPDOWN_BG = GREY[60];\r\nexport const DROPDOWN_COLOR = GREY[400];\r\nexport const DROPDOWN_ITEM_BG = WHITE;\r\nexport const DROPDOWN_ITEM_BG_HOVER = GREY[50];\r\nexport const DROPDOWN_ITEM_COLOR = INPUT_COLOR;\r\n\r\nexport const BARCHART_GRID_COLOR = INPUT_BORDER;\r\nexport const BARCHART_AXIS_COLOR = GREY[400];\r\nexport const BARCHART_BAR_BG = ORANGE[400];\r\n\r\nexport const LINECHART_GRID_COLOR = INPUT_BORDER;\r\nexport const LINECHART_AXIS_COLOR = GREY[400];\r\nexport const LINECHART_LINE_COLOR = ORANGE[400];\r\nexport const LINECHART_REFERENCELINE_COLOR = BLUE[500];\r\n\r\nexport const KPI_BG = GREY[50];\r\nexport const KPI_COLOR = GREY[500];\r\nexport const KPI_VALUE_COLOR = BLUE[800];\r\n","import { css, SerializedStyles } from '@emotion/react';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { TITLE1_COLOR } from '../../styles';\r\n\r\ninterface Props {\r\n  type: 'title1';\r\n  // type: 'title1' | 'title2' | 'body1' | 'body2';\r\n}\r\n\r\nconst title1Style = () => css`\r\n  &,\r\n  & * {\r\n    color: ${ TITLE1_COLOR };\r\n    font-size: 2.1rem;\r\n    font-weight: 400;\r\n    letter-spacing: -0.4px;\r\n    line-height: 31.5px;\r\n    margin: 0;\r\n  }\r\n\r\n  & {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\ntype ReturnType = () => SerializedStyles | undefined;\r\n\r\nconst getStyles = (type: Props['type']): ReturnType => {\r\n  switch (type) {\r\n    case 'title1':\r\n      return title1Style;\r\n\r\n    default:\r\n      return () => undefined;\r\n  }\r\n}\r\n\r\nconst Typography: React.FC<PropsWithChildren<Props>> = ({ children, type }) => {\r\n  const styles = getStyles(type);\r\n\r\n  return (\r\n    <div css={ styles }>\r\n      { children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Typography;\r\n","import { Endpoint } from \"../types\";\r\n\r\nexport const BASE_URL = 'https://api.athenian.co/v1'\r\n\r\nconst METRICS = '/metrics'\r\n\r\nexport const PULL_REQUESTS: Endpoint = {\r\n  method: 'post',\r\n  path: `${ METRICS }/pull_requests`,\r\n}","import { http } from \"./axiosInstance\";\r\nimport { PULL_REQUESTS } from \"./constants/endpoints\";\r\nimport { PullRequestMetricsParams, PullRequestMetricsResponse } from \"./types\";\r\n\r\nconst getRepositoryPullRequestsMetrics = async (params: PullRequestMetricsParams) => {\r\n  const response = await http[PULL_REQUESTS.method]<PullRequestMetricsResponse>(PULL_REQUESTS.path, params);\r\n  return response.data;\r\n}\r\n\r\n/**\r\n * A set of tools to communicate with Athenian API\r\n */\r\nconst apiClient = {\r\n  /**\r\n   * Any request related to metrics\r\n   */\r\n  metrics: {\r\n    /**\r\n     * Get pull request metrics\r\n     */\r\n    getRepositoryPullRequestsMetrics,\r\n  }\r\n}\r\n\r\nexport default apiClient;\r\n","import { Granularity, PullRequestMetricsParams, PullRequestMetricsResponse, Repository } from \"../apiClient/types\";\r\nimport { PullRequestMetrics, PullRequestMetricsFilters } from '../types';\r\n\r\n/**\r\n * Create a relevant model for the frontend, based on\r\n * backend's response\r\n */\r\nexport const createMetricsFromServer = ({ calculated }: PullRequestMetricsResponse): PullRequestMetrics =>\r\n  calculated;\r\n\r\n/**\r\n * Transform frontend dates into a format that\r\n * Athenian's backend can understand\r\n */\r\n export const createDateToServer = (date: Date): string => {\r\n  const yyyy = date.getFullYear().toString().padStart(4, '0');\r\n  const MM = (date.getMonth() + 1).toString().padStart(2, '0');\r\n  const dd = date.getDate().toString().padStart(2, '0');\r\n\r\n  return `${ yyyy }-${ MM }-${ dd }`;\r\n}\r\n\r\n/**\r\n * Transform frontend models into a model that\r\n * Athenian's backend can understand\r\n */\r\nexport const createPullRequestParamsToServer = (\r\n  {\r\n    dateFrom,\r\n    dateTo,\r\n    metric\r\n  }: PullRequestMetricsFilters, \r\n  granularities: Granularity[],\r\n  groupByRepository = false,\r\n): PullRequestMetricsParams => ({\r\n  for: [\r\n    {\r\n      repositories: [\r\n        Repository.athenianApi,\r\n        Repository.metadata,\r\n        Repository.infraestructure,\r\n        Repository.athenianWebapp,\r\n      ],\r\n      repogroups: groupByRepository ? [[0], [1], [2], [3]] : undefined\r\n    }\r\n  ],\r\n  metrics: [metric],\r\n  granularities,\r\n  account: 1,\r\n  exclude_inactive: true,\r\n  timezone: 60,\r\n  date_from: createDateToServer(dateFrom),\r\n  date_to: createDateToServer(dateTo)\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\ninterface Sizes {\r\n  screenWidth: number;\r\n  screenHeight: number;\r\n  ratiowh: number;\r\n  ratiohw: number;\r\n  rect?: {\r\n    width: number;\r\n    height: number;\r\n    left: number;\r\n    right: number;\r\n    top: number;\r\n    bottom: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Listen to window's resize event and returns some information about window's size.\r\n * If an `element` is providen, it wil also return element's sizes\r\n */\r\nexport const useResize = (element?: React.RefObject<Element>) => {\r\n  const [sizes, setSizes] = useState<Sizes>({\r\n    screenWidth: 0,\r\n    screenHeight: 0,\r\n    ratiowh: 0,\r\n    ratiohw: 0,\r\n    rect: undefined\r\n  });\r\n\r\n  const onResize = () => {\r\n    const screenWidth = window.innerWidth;\r\n    const screenHeight = window.innerHeight;\r\n    const ratiowh = screenWidth / screenHeight;\r\n    const ratiohw = screenHeight / screenWidth;\r\n    let rect: Sizes['rect'];\r\n    \r\n    if (element?.current) {\r\n      // DOM API does not allow for a shallow copy, so we have to manually set them\r\n      const clientRect = element.current.getBoundingClientRect();\r\n      rect = {\r\n        width: clientRect.width,\r\n        height: clientRect.height > 300 ? 300 : clientRect.height,\r\n        left: clientRect.left,\r\n        right: clientRect.right,\r\n        top: clientRect.top,\r\n        bottom: clientRect.bottom\r\n      };\r\n    }\r\n\r\n    setSizes({\r\n      screenWidth,\r\n      screenHeight,\r\n      ratiowh,\r\n      ratiohw,\r\n      rect\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', onResize, false);\r\n    onResize();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, false);\r\n    };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return sizes;\r\n};\r\n","import { css } from '@emotion/react';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport {\r\n  BUTTON_BG,\r\n  BUTTON_BG_PRIMARY,\r\n  BUTTON_BORDER,\r\n  BUTTON_BORDER_HOVER,\r\n  BUTTON_COLOR,\r\n  BUTTON_COLOR_PRIMARY\r\n} from '../../styles';\r\n\r\nexport const buttonStyles = () => css`\r\n  &.Button,\r\n  // I cannot change this buttons' className, so I need to add an exception\r\n  &.react-datepicker__navigation {\r\n    align-items: center;\r\n    background-color: ${ BUTTON_BG };\r\n    border: 1px solid ${ BUTTON_BORDER };\r\n    border-radius: 3px;\r\n    color: ${ BUTTON_COLOR };\r\n    cursor: pointer;\r\n    display: flex;\r\n    font-size: 1.2rem;\r\n    height: 32px;\r\n    justify-content: center;\r\n    padding: 6px 9px;\r\n\r\n    &:hover {\r\n      border-color: ${ BUTTON_BORDER_HOVER };\r\n    }\r\n\r\n    &--primary {\r\n      background-color: ${ BUTTON_BG_PRIMARY };\r\n      border-color: ${ BUTTON_BG_PRIMARY };\r\n      color: ${ BUTTON_COLOR_PRIMARY };\r\n\r\n      &:hover {\r\n        border-color: ${ BUTTON_BG_PRIMARY };\r\n        opacity: 0.7;\r\n        text-decoration: none !important;\r\n      }\r\n    }\r\n\r\n    &--small {\r\n      border: none;\r\n      height: 28px;\r\n      padding: 0.375rem 1.5rem;\r\n\r\n      &:hover {\r\n        opacity: 0.7;\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  onClick: () => void;\r\n  primary?: boolean;\r\n  small?: boolean;\r\n}\r\n\r\nconst Button: React.FC<PropsWithChildren<Props>> = ({ children, onClick, primary = false, small = false }) => (\r\n  <button\r\n    css={ buttonStyles }\r\n    className={ `Button${ primary ? ' Button--primary' : ''}${ small ? ' Button--small' : ''}`}\r\n    onClick={ onClick }\r\n  >\r\n    { children }\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import { css } from '@emotion/react';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { TAB_BORDER, TAB_BORDER_ACTIVE, TAB_COLOR, TAB_COLOR_ACTIVE } from '../../styles';\r\n\r\nexport const TAB_HEIGHT = 52;\r\n\r\nconst tabStyle = () => css`  \r\n  &.Tabs-tab {\r\n    align-items: center;\r\n    display: inline-flex;\r\n    border-bottom: 0.3rem solid transparent;\r\n    color: ${ TAB_COLOR };\r\n    cursor: pointer;\r\n    height: ${ TAB_HEIGHT }px;\r\n    margin: 0 2rem;\r\n    padding: 1.2rem 0;\r\n    transition: border-bottom 0.2s;\r\n\r\n    &:not(.Tabs-tab--active):hover {\r\n      border-bottom-color: ${ TAB_BORDER };\r\n    }\r\n\r\n    &--active {\r\n      border-bottom: 0.3rem solid ${ TAB_BORDER_ACTIVE };\r\n      color: ${ TAB_COLOR_ACTIVE };\r\n      cursor: default;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  active?: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst Tab: React.FC<PropsWithChildren<Props>> = ({ active = false, children, onClick }) => (\r\n  <div\r\n    css={ tabStyle }\r\n    className={ `Tabs-tab${ active ? ' Tabs-tab--active' : ''}` }\r\n    onClick={ onClick }\r\n  >\r\n    { children }\r\n  </div>\r\n);\r\n\r\nexport default Tab;\r\n","import { css } from '@emotion/react';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { TAB_BORDER } from '../../styles';\r\nimport Tab, { TAB_HEIGHT } from './Tab';\r\n\r\n\r\nconst tabsStyle = () => css`\r\n  &.Tabs {\r\n    align-items: center;\r\n    border-bottom: 1px solid ${ TAB_BORDER };\r\n    display: flex;\r\n    font-size: 1.2rem;\r\n    height: ${ TAB_HEIGHT }px;\r\n    justify-content: center;\r\n    line-height: 1.4rem;\r\n    margin: 0px auto;\r\n    margin-bottom: 20px;\r\n    text-transform: capitalize;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\ninterface Dependencies {\r\n  Tab: typeof Tab;\r\n}\r\n\r\ninterface Props {\r\n  children: (deps: Dependencies) => JSX.Element;\r\n}\r\n\r\nconst Tabs: React.FC<PropsWithChildren<Props>> = ({ children }) => (\r\n  <div className=\"Tabs\" css={tabsStyle}>\r\n    { children({ Tab })}\r\n  </div>\r\n);\r\n\r\nexport default Tabs;\r\n","import { DropdownItem } from \"../components/Forms/Dropdown\";\r\n\r\nexport const capitalize = (str: string) =>\r\n  str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\nexport const getEnumLabelFromValue = <E>(str: E): string =>\r\n  (str as unknown as string).split('-')\r\n    .map((word: string) => word.toUpperCase())\r\n    .join(' ')\r\n\r\nexport const getEnumValueFromLabel = <E>(str?: string): E =>\r\n  str?.toLowerCase().replace(/ /g, '-') as unknown as E;\r\n\r\nexport const getDropdownItemsFromEnum = <E>(object: E): DropdownItem[] =>\r\n  Object.values(object).map(val => ({\r\n    label: getEnumLabelFromValue(val),\r\n    value: val\r\n  }))\r\n","import { css } from \"@emotion/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PullRequestMetric } from \"../apiClient/types\";\r\nimport Button from \"../components/Button\";\r\nimport Tabs from \"../components/Tabs\";\r\nimport { LOCAL_STORAGE_KEY } from \"../types\";\r\nimport { getItem, setItem } from \"../utils/localStorage\";\r\nimport { getEnumValueFromLabel } from \"../utils/objects\";\r\n\r\nconst tabsBar = () => css`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n`;\r\n\r\n/**\r\n * Provide tools for reading/updating persisted tabs.\r\n * This way we can easily change how to persist them, without\r\n * modifying the rest of the code\r\n */\r\nconst usePersistedTabs = () => {\r\n  const [persistedTabs, setPersistedTabs] = useState<string[]>([]);\r\n\r\n  const persistTabs = (tabs: string[]) => {\r\n    setItem(LOCAL_STORAGE_KEY.tabs, JSON.stringify(tabs))\r\n    setPersistedTabs(tabs)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const persistedTabsStr = getItem(LOCAL_STORAGE_KEY.tabs);\r\n    if (persistedTabsStr) {\r\n      try {\r\n        const tabs = JSON.parse(persistedTabsStr) as string[];\r\n        setPersistedTabs(tabs);\r\n      } catch {}\r\n    }\r\n  }, [])\r\n\r\n  return {\r\n    persistedTabs,\r\n    persistTabs\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a name has been already assigned to a tab.\r\n * Name is assigned when selecting a metric to display.\r\n */\r\nexport const tabHasBeenSetup = (tabName?: string) => {\r\n  const lowerCaseName = tabName?.toLowerCase() || '';\r\n\r\n  const exists = lowerCaseName.length > 0;\r\n  const containsInitialName = getEnumValueFromLabel<PullRequestMetric>(lowerCaseName).includes('tab-#');\r\n\r\n  return exists && !containsInitialName;\r\n}\r\n\r\n/**\r\n * Creates a list of tabs, and provide the tools for add, rename, remove\r\n * and render them in the UI.\r\n * \r\n * All these tools are automatically persisting them, too.\r\n */\r\nexport const useDynamicTabs = () => {\r\n  const { persistedTabs, persistTabs } = usePersistedTabs();\r\n  const [tabs, setTabs] = useState<string[]>([]);\r\n  const [active, setActive] = useState<string | undefined>();\r\n\r\n  const activateTab = (tab: string) => {\r\n    setActive(tab);\r\n  }\r\n\r\n  const createTab = () => {\r\n    const tabName = `Tab #${tabs.length + 1}`;\r\n    \r\n    setTabs([\r\n      ...tabs,\r\n      tabName,\r\n    ]);\r\n\r\n    activateTab(tabName)\r\n  }\r\n\r\n  const removeActiveTab = () => {\r\n    // Find current tab position\r\n    const tabIndex = tabs.findIndex(t => t === active);\r\n    const newTabs = tabs.filter(t => t !== active)\r\n\r\n    // Remove activeTab\r\n    setTabs(newTabs);\r\n\r\n    // Mark the previous one as active\r\n    activateTab(newTabs[tabIndex === 0 ? tabIndex : tabIndex - 1])\r\n\r\n    // Update persisted tabs\r\n    persistTabs(newTabs);\r\n  }\r\n\r\n  const renameTab = (tab: string, newName: string) => {\r\n    const updatedTabs = tabs.map(t => t === tab ? newName : t);\r\n    \r\n    persistTabs(updatedTabs);\r\n    \r\n    if (active === tab) {\r\n      activateTab(newName);\r\n    }\r\n  }\r\n\r\n  const renderTabs = () => (\r\n    <Tabs>\r\n      { ({ Tab }) => (\r\n        <>\r\n          <div css={ tabsBar }>\r\n            { tabs.map(tab => (\r\n              <Tab key={ tab } active={ active === tab } onClick={ () => activateTab(tab) }>\r\n                { tab }\r\n              </Tab>\r\n            )) }\r\n          </div>\r\n\r\n          <Button onClick={ createTab }>\r\n            Add\r\n          </Button>\r\n        </>\r\n      ) }\r\n    </Tabs>\r\n  )\r\n\r\n  useEffect(() => {\r\n    setTabs(persistedTabs);\r\n\r\n    if (!active) {\r\n      setActive(persistedTabs[0]);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [persistedTabs])\r\n\r\n  return {\r\n    activeTab: tabHasBeenSetup(active) ? getEnumValueFromLabel<PullRequestMetric>(active) : active,\r\n    removeActiveTab,\r\n    renderTabs,\r\n    renameTab,\r\n    tabs\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.dc7c6f56.svg\";","/*\r\n * This file contains the z-indexes order for the application.\r\n * This way we don't need to use abstract numbers. Instead,\r\n * we use human readable names, which makes everything easier.\r\n * \r\n * Also, if we need to change some orders, we can easily shift\r\n * the array's order and all the application will be updated.\r\n */\r\n\r\ntype Layer = 'BACKGROUND' | 'CONTENT' | 'SIDEBAR' | 'HEADER' | 'MODAL' | 'NOTIFICATION' | 'TUTORIAL';\r\n\r\nconst layers: Layer[] = ['BACKGROUND', 'CONTENT', 'SIDEBAR', 'HEADER', 'MODAL', 'NOTIFICATION', 'TUTORIAL'];\r\n\r\nconst getLayerPosition = (layer: Layer) => layers.findIndex(l => l === layer);\r\n\r\nexport default getLayerPosition;","import { css } from '@emotion/react';\r\nimport React from 'react';\r\nimport logo from '../../../../assets/logo.svg';\r\nimport { HEADER_BG, HEADER_BORDER, HEADER_COLOR } from '../../../../styles';\r\nimport getLayerPosition from '../../../../styles/zIndex';\r\n\r\nconst headerHeight = 42;\r\n\r\nconst headerStyle = () => css`\r\n  &.Header {\r\n    align-items: center;\r\n    background-color: ${ HEADER_BG };\r\n    border-bottom: 1px solid ${ HEADER_BORDER };\r\n    color: ${ HEADER_COLOR };\r\n    display: flex;\r\n    height: ${headerHeight}px;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    z-index: ${ getLayerPosition('HEADER') };\r\n\r\n    & > * {\r\n      margin-right: 10px;\r\n      max-height: 100%;\r\n\r\n      &:last-child {\r\n        margin-right: 0;\r\n      }\r\n    }\r\n\r\n    .Header-logo {\r\n      height: 24px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst headerSpacerStyle = () => css`\r\n  &.Header-spacer {\r\n    height: ${ headerHeight }px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Header: React.FC = () => (\r\n  <>\r\n    <header css={ headerStyle } className=\"Header\">\r\n      <a\r\n        className=\"Header-logoLink\"\r\n        href=\"https://athenian.co\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img className=\"Header-logo\" src={logo} alt=\"Athenian logo\"/>\r\n      </a>\r\n\r\n      <span className=\"Header-text\">Athenian WebApp Tech Assessment</span>\r\n    </header>\r\n\r\n    <div css={ headerSpacerStyle } className=\"Header-spacer\" />\r\n  </>\r\n)\r\n\r\nexport default Header;\r\n","import { css } from '@emotion/react';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport Header from './components/Header';\r\n\r\nconst mainLayoutStyle = () => css`\r\n  &.MainLayout {\r\n    .MainLayout-content {\r\n      margin: 0 auto;\r\n      max-width: 1280px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MainLayout: React.FC<PropsWithChildren<{}>> = ({ children }) => (\r\n  <div css={mainLayoutStyle} className=\"MainLayout\">\r\n    <Header />\r\n\r\n    <main className=\"MainLayout-content\">\r\n      { children }\r\n    </main>\r\n  </div>\r\n)\r\n\r\nexport default MainLayout;\r\n","export const toDecimals = (num: number, decimals = 2, minDecimals?: number) =>\r\n  num.toLocaleString('en-EN', {\r\n    maximumFractionDigits: decimals,\r\n    minimumFractionDigits: minDecimals ?? decimals\r\n  });\r\n","import { toDecimals } from \"../formatters\";\r\n\r\nexport const getDefaultDateRange = () => {\r\n  const today = new Date(Date.now());\r\n  const daysAgo = new Date(today.getTime() - (13 * 24 * 60 * 60 * 1000));\r\n\r\n  return {\r\n    startDate: daysAgo,\r\n    endDate: today,\r\n  }\r\n}\r\n\r\nexport const getLargestAvailableTimeUnit = (seconds: number) => {\r\n  const maxSeconds = 60;\r\n  const maxMinutes = maxSeconds * 60;\r\n  const maxHours = maxMinutes * 24;\r\n  const maxDays = maxHours * 30;\r\n\r\n  if (seconds <= maxSeconds) {\r\n    return `${toDecimals(seconds, 1, 0)}s`;\r\n  }\r\n\r\n  if (seconds <= maxMinutes) {\r\n    return `${toDecimals(seconds / 60, 1, 0)} min`;\r\n  }\r\n\r\n  if (seconds <= maxHours) {\r\n    return `${toDecimals(seconds / 60 / 60, 1, 0)} h`;\r\n  }\r\n\r\n  if (seconds <= maxDays) {\r\n    const days = toDecimals(seconds / 60 / 60 / 24, 0);\r\n    const daysInMs = Number(days) * maxHours;\r\n    const hoursInMs = seconds - daysInMs;\r\n    const hours = toDecimals(hoursInMs / 60 / 60, 1, 0);\r\n\r\n    return `${days} days${ Number(hours) > 0 ? `, ${hours} h` : ''}`;\r\n  }\r\n\r\n  return `${toDecimals(seconds / 60 / 60 / 24 / 30, 1, 0)} months`;\r\n};\r\n","import React from 'react';\r\n\r\nconst CalendarIcon: React.FC = () => (\r\n  <svg focusable=\"false\" viewBox=\"0 0 1393.1 1500\">\r\n    <path d=\"m107 1393h241v-241h-241zm295 0h268v-241h-268zm-295-295h241v-268h-241zm295 0h268v-268h-268zm-295-321h241v-241h-241zm616 616h268v-241h-268zm-321-616h268v-241h-268zm643 616h241v-241h-241zm-322-295h268v-268h-268zm-294-723v-241c0-7-3-14-8-19-6-5-12-8-19-8h-54c-7 0-13 3-19 8-5 5-8 12-8 19v241c0 7 3 14 8 19 6 5 12 8 19 8h54c7 0 13-3 19-8 5-5 8-12 8-19zm616 723h241v-268h-241zm-322-321h268v-241h-268zm322 0h241v-241h-241zm27-402v-241c0-7-3-14-8-19-6-5-12-8-19-8h-54c-7 0-13 3-19 8-5 5-8 12-8 19v241c0 7 3 14 8 19 6 5 12 8 19 8h54c7 0 13-3 19-8 5-5 8-12 8-19zm321-54v1072c0 29-11 54-32 75s-46 32-75 32h-1179c-29 0-54-11-75-32s-32-46-32-75v-1072c0-29 11-54 32-75s46-32 75-32h107v-80c0-37 13-68 40-95s57-39 94-39h54c37 0 68 13 95 39 26 26 39 58 39 95v80h321v-80c0-37 13-69 40-95 26-26 57-39 94-39h54c37 0 68 13 94 39s40 58 40 95v80h107c29 0 54 11 75 32s32 46 32 75z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default CalendarIcon;","import { css } from \"@emotion/react\";\r\nimport React, { useState } from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport CalendarIcon from \"../../../assets/icons/Calendar\";\r\nimport {\r\n  DATEPICKER_ACTIONS_BG,\r\n  DATEPICKER_DAY_BG,\r\n  DATEPICKER_DAY_BG_ACTIVE,\r\n  DATEPICKER_DAY_BG_SELECTED,\r\n  DATEPICKER_DAY_COLOR,\r\n  DATEPICKER_DAY_COLOR_ACTIVE,\r\n  DATEPICKER_DAY_COLOR_DISABLED,\r\n  DATEPICKER_DAY_COLOR_SELECTED,\r\n  DATEPICKER_PANEL_BG,\r\n  DATEPICKER_PANEL_COLOR,\r\n  DATEPICKER_WEEKDAY_COLOR,\r\n  ERROR_COLOR,\r\n  INPUT_BORDER,\r\n  INPUT_COLOR\r\n} from \"../../../styles\";\r\nimport { getDefaultDateRange } from \"../../../utils/dates\";\r\nimport { isValidRange } from \"../../../utils/validations\";\r\nimport Button, { buttonStyles } from \"../../Button\";\r\nimport { formField } from \"../styles\";\r\n\r\nconst threeMonths = 1000 * 60 * 60 * 24 * 30 * 3;\r\n\r\nconst datePickerField = () => css`\r\n  ${formField()}\r\n\r\n  &.Datepicker {\r\n    min-width: 278px;\r\n\r\n    .react-datepicker-wrapper {\r\n      .react-datepicker__input-container {\r\n        align-items: center;\r\n        display: flex;\r\n        flex: 1;\r\n\r\n        input {\r\n          background: transparent;\r\n          border: none;\r\n          color: ${ INPUT_COLOR };\r\n          flex: 1;\r\n          padding: 10px;\r\n          text-align: center;\r\n        }\r\n      }\r\n      \r\n      button.react-datepicker__close-icon {\r\n        background: transparent;\r\n        border-radius: 50%;\r\n        color: inherit;\r\n        color: rgb(133, 135, 150);\r\n        height: 28px;\r\n        font-size: 11px;\r\n        margin: 4px;\r\n        padding: 6px;\r\n        position: initial;\r\n        text-align: center;\r\n        width: 28px;\r\n\r\n        &:hover {\r\n          background-color: ${ INPUT_BORDER };\r\n        }\r\n\r\n        ::after {\r\n          background-color: transparent;\r\n          border-radius: 0;\r\n          color: inherit;\r\n          display: inline-block;\r\n          font-size: 24px;\r\n          height: 14px;\r\n          line-height: 8px;\r\n          margin: 0 auto;\r\n          margin-left: -1px;\r\n          margin-top: 4px;\r\n          padding: 0;\r\n          vertical-align: top;\r\n          width: 14px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .react-datepicker {\r\n      background-color: ${ DATEPICKER_PANEL_BG };\r\n      border-color: ${ INPUT_BORDER };\r\n\r\n      .react-datepicker__triangle {\r\n        &::before {\r\n          border-bottom-color: ${ INPUT_BORDER };\r\n        }\r\n        &::after {\r\n          border-bottom-color: ${ DATEPICKER_PANEL_BG };\r\n        }\r\n      }\r\n\r\n      .react-datepicker__header {\r\n        background-color: transparent;\r\n        border-bottom: none;\r\n        padding: 0;\r\n      }\r\n\r\n      .react-datepicker__navigation {\r\n        ${ buttonStyles() }\r\n        top: 18px;\r\n        width: 40px;\r\n\r\n        > .react-datepicker__navigation-icon {\r\n          height: 19px;\r\n          width: 19px;\r\n\r\n          &::before {\r\n            border-color: currentColor;\r\n            border-width: 1px 1px 0 0;\r\n            left: 4px;\r\n          }\r\n        }\r\n      }\r\n\r\n      .react-datepicker__navigation--previous {\r\n        left: 22px;\r\n      }\r\n\r\n      .react-datepicker__navigation--next {\r\n        right: 22px;\r\n      }\r\n\r\n      .react-datepicker__current-month {\r\n        color: ${ DATEPICKER_PANEL_COLOR };\r\n        font-size: 1.2rem;\r\n        font-weight: bolder;\r\n        padding-top: 22px;\r\n        padding-bottom: 37px;\r\n      }\r\n\r\n      .react-datepicker__day-names {\r\n        margin-bottom: -2px;\r\n        padding: 0 13px;\r\n      }\r\n\r\n      .react-datepicker__week,\r\n      .react-datepicker__day {\r\n        height: 29px;\r\n      }\r\n      \r\n      .react-datepicker__week {\r\n        align-items: center;\r\n        display: flex;\r\n        justify-content: center;\r\n      }\r\n\r\n      .react-datepicker__day-name,\r\n      .react-datepicker__day {\r\n        border-top: 1px solid ${ DATEPICKER_PANEL_BG };\r\n        border-right: 1px solid ${ DATEPICKER_PANEL_BG };\r\n        font-size: 1rem;\r\n        font-weight: 300;\r\n        margin: 0;\r\n        width: 30px;\r\n      }\r\n\r\n      .react-datepicker__day-name {\r\n        color: ${ DATEPICKER_WEEKDAY_COLOR };\r\n      }\r\n\r\n      .react-datepicker__day {\r\n        align-items: center;\r\n        background-color: ${ DATEPICKER_DAY_BG };\r\n        border-radius: 0;\r\n        color: ${ DATEPICKER_DAY_COLOR };\r\n        display: inline-flex;\r\n        justify-content: center;\r\n\r\n        &:hover {\r\n          opacity: 0.7;\r\n        }\r\n\r\n        &--disabled {\r\n          color: ${ DATEPICKER_DAY_COLOR_DISABLED };\r\n        }\r\n\r\n        &--in-selecting-range,\r\n        &--in-range {\r\n          background-color: ${ DATEPICKER_DAY_BG_SELECTED };\r\n          color: ${ DATEPICKER_DAY_COLOR_SELECTED };\r\n        }\r\n\r\n        &--selecting-range-start,\r\n        &--selecting-range-end,\r\n        &--range-start,\r\n        &--range-end {\r\n          background-color: ${ DATEPICKER_DAY_BG_ACTIVE };\r\n          color: ${ DATEPICKER_DAY_COLOR_ACTIVE };\r\n        }\r\n\r\n        &--outside-month {\r\n          visibility: hidden;\r\n        }\r\n      }\r\n\r\n      .react-datepicker__footer {\r\n        align-items: center;\r\n        background-color: ${ DATEPICKER_ACTIONS_BG };\r\n        border-top: 1px solid ${ INPUT_BORDER };\r\n        clear: left;\r\n        display: flex;\r\n        flex-direction: 'row';\r\n        float: left;\r\n        justify-content: flex-end;\r\n        margin-top: 16px;\r\n        padding: 1.2rem 2rem;\r\n        width: 100%;\r\n      }\r\n\r\n      .react-datepicker__error-msg {\r\n        color: ${ ERROR_COLOR };\r\n        font-size: 1.2rem;\r\n        font-weight: 700;\r\n        flex: 1;\r\n      }\r\n\r\n      .react-datepicker__action-buttons {\r\n        display: flex;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst { startDate: defaultStart, endDate: defaultEnd } = getDefaultDateRange();\r\n\r\ninterface Props {\r\n  error?: string;\r\n  isClearable?: boolean;\r\n  onChange: (startDate: Date, endDate?: Date) => void;\r\n  range?: boolean;\r\n}\r\n\r\nconst DatePicker: React.FC<Props> = ({ error, isClearable, onChange, range = false }) => {\r\n  const [startDate, setStartDate] = useState<Date>(defaultStart);\r\n  const [endDate, setEndDate] = useState<Date>(defaultEnd);\r\n  const [\r\n    [newStartDate, newEndDate],\r\n    setNewDates\r\n  ] = useState<[Date | undefined, Date | undefined]>([defaultStart, range ? defaultEnd : undefined]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [err, setErr] = useState('');\r\n\r\n  const handleChange = (newValue: Date | [Date, Date]) => {\r\n    // Single date OR dateRange selecting start date\r\n    if (newValue instanceof Date) {\r\n      setNewDates([newValue, undefined]);\r\n\r\n    // Other scenarios\r\n    } else {\r\n      const [start, finish] = newValue;\r\n\r\n      // Clear button (x)\r\n      if (!start && !finish) {\r\n        setStartDate(defaultStart);\r\n        setEndDate(defaultEnd);\r\n        setNewDates([defaultStart, defaultEnd])\r\n\r\n        onChange(defaultStart, defaultEnd);\r\n        setOpen(false);\r\n\r\n      // Select dateRange's end date\r\n      } else {\r\n        const isValid = (start && !finish) || (start && finish && isValidRange(start, finish, threeMonths))\r\n        if (isValid) {\r\n          setNewDates([start, finish]);\r\n          setErr('');\r\n        } else {\r\n          setErr('Invalid dates')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    handleChange(range ? [startDate, endDate] : startDate);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (newStartDate && newEndDate) {\r\n      setStartDate(newStartDate);\r\n      setEndDate(newEndDate);\r\n\r\n      onChange(newStartDate, newEndDate);\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  const getMaxDate = () => {\r\n    const maxDate = newStartDate\r\n      ? new Date(newStartDate?.getTime() + 3 * 30 * 24 * 60 * 60 * 1000)\r\n      : defaultEnd;\r\n\r\n    return maxDate.getTime() >= Date.now()\r\n      ? new Date(Date.now())\r\n      : maxDate;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div css={datePickerField} className=\"Datepicker\">\r\n        <CalendarIcon />\r\n\r\n        <ReactDatePicker\r\n          dateFormat={'MMM dd, yyyy'}\r\n          endDate={ range ? newEndDate : undefined }\r\n          isClearable={ isClearable }\r\n          maxDate={ getMaxDate() }\r\n          monthsShown={ 2 }\r\n          onChange={ handleChange }\r\n          onClickOutside={ handleCancel }\r\n          onInputClick={ handleOpen }\r\n          open={ open }\r\n          showDisabledMonthNavigation={ true }\r\n          selected={ startDate }\r\n          selectsRange={ range }\r\n          startDate={ range ? newStartDate : undefined }\r\n        >\r\n          <div className=\"react-datepicker__footer\">\r\n          { (error || err) && (\r\n            <p className=\"react-datepicker__error-msg\">\r\n              { error || err }\r\n            </p>\r\n          )}\r\n\r\n          <div className=\"react-datepicker__action-buttons\">\r\n            <Button onClick={ handleCancel } small>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={ handleSubmit } primary small>\r\n              Apply\r\n            </Button>\r\n          </div>\r\n          </div>\r\n        </ReactDatePicker>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","import { css } from \"@emotion/react\";\r\nimport { INPUT_BG, INPUT_BORDER } from \"../../styles\";\r\n\r\nexport const formField = () => css`\r\n  align-items: center;\r\n  background-color: ${ INPUT_BG };\r\n  border: 1px solid ${ INPUT_BORDER };\r\n  border-radius: 0.4rem;\r\n  color: inherit;\r\n  display: inline-flex;\r\n  font-size: 12px;\r\n\r\n  & > svg {\r\n    display: inline-block;\r\n    fill: currentColor;\r\n    margin: 10px;\r\n    width: 16px;\r\n  }\r\n`;\r\n","/**\r\n * Compares two different dates and check if there is\r\n * more than a specified amount of time between them.\r\n * If so, this function will return false.\r\n * \r\n * @param startDate First Range's element\r\n * @param endDate Second Range's element\r\n * @param diff Time difference in MS\r\n * @returns boolean\r\n */\r\nexport const isValidRange = (startDate: Date, endDate: Date, diff: number) => {\r\n  const difference = startDate.getTime() - endDate.getTime();\r\n\r\n  return (\r\n    (difference >= 0 && difference <= diff) ||\r\n    (difference < 0 && -difference <= diff)\r\n  );\r\n};\r\n","import { css } from '@emotion/react';\r\nimport React from 'react';\r\n\r\nconst toolbarStyle = () => css`\r\n  &.Toolbar {\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 2rem 0;\r\n    min-height: 40px;\r\n    padding: 0 20px;\r\n\r\n    &--no-padding {\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  fullWidth?: boolean;\r\n  left?: JSX.Element;\r\n  right?: JSX.Element;\r\n}\r\n\r\nconst Toolbar: React.FC<Props> = ({ fullWidth = false, left, right }) => (\r\n  <div className={`Toolbar${ fullWidth ? ' Toolbar--no-padding' : ''}`} css={ toolbarStyle }>\r\n    <div className=\"Toolbar-left\">\r\n      { left }\r\n    </div>\r\n\r\n    <div className=\"Toolbar-right\">\r\n      { right }\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport DatePicker from '../../../../components/Forms/Datepicker';\r\nimport Toolbar from '../../../../components/Toolbar';\r\n\r\ninterface Props {\r\n  onDateRangeChange: (startDate: Date, endDate?: Date) => void;\r\n}\r\n\r\nconst Header: React.FC<Props> = ({ onDateRangeChange }) => (\r\n  <Toolbar right={\r\n    <DatePicker\r\n      isClearable\r\n      onChange={onDateRangeChange}\r\n      range\r\n    />\r\n  } />\r\n);\r\n\r\nexport default Header;\r\n","import { css } from '@emotion/react';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { CARD_BG, CARD_BORDER, CARD_TITLE_COLOR } from '../../styles';\r\n\r\nconst cardStyle = () => css`\r\n  &.Card {\r\n    align-items: center;\r\n    background-color: ${ CARD_BG };\r\n    border: 1px solid ${ CARD_BORDER };\r\n    border-radius: 0.35rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    .Card-title,\r\n    .Card-content {\r\n      align-items: center;\r\n      display: flex;\r\n      width: 100%;\r\n    }\r\n\r\n    .Card-title {\r\n      border-bottom: 1px solid ${ CARD_BORDER };\r\n      color: ${ CARD_TITLE_COLOR };\r\n      font-size: 1.4rem;\r\n      font-weight: 400;\r\n      padding: 2rem;\r\n      line-height: 2rem;\r\n    }\r\n\r\n    .Card-content {\r\n      flex-idrection: column;\r\n      flex: 1;\r\n      padding: 3.2rem 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  title?: string;\r\n}\r\n\r\nconst Card: React.FC<PropsWithChildren<Props>> = ({ children, title }) => (\r\n  <div css={ cardStyle } className=\"Card\">\r\n    { !!title && (\r\n      <div className=\"Card-title\">\r\n        { title }\r\n      </div>\r\n    ) }\r\n\r\n    <div className=\"Card-content\">\r\n      { children }\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Card;\r\n","import { PullRequestMetric } from \"../apiClient/types\";\r\n\r\nconst units: Record<PullRequestMetric, string> = {\r\n  [PullRequestMetric.prLeadTime]: 's',\r\n  [PullRequestMetric.prLeadCount]: ' PRs',\r\n  [PullRequestMetric.prLeadCountQ]: ' PRs',\r\n  [PullRequestMetric.prAllCount]: ' PRs',\r\n  [PullRequestMetric.prCycleTime]: 's',\r\n  [PullRequestMetric.prWipTime]: 's',\r\n  [PullRequestMetric.prWipCount]: ' PRs',\r\n  [PullRequestMetric.prWipCountQ]: ' PRs',\r\n  [PullRequestMetric.prWipPendingCount]: ' PRs',\r\n  [PullRequestMetric.prReviewTime]: 's',\r\n  [PullRequestMetric.prReviewCount]: ' PRs',\r\n  [PullRequestMetric.prReviewCountQ]: ' PRs',\r\n  [PullRequestMetric.prReviewPendingCount]: ' PRs',\r\n  [PullRequestMetric.prMergingTime]: 's',\r\n  [PullRequestMetric.prMergingCount]: ' PRs',\r\n  [PullRequestMetric.prMergingCountQ]: ' PRs',\r\n  [PullRequestMetric.prMergingPendingCount]: ' PRs',\r\n  [PullRequestMetric.prReleaseTime]: 's',\r\n  [PullRequestMetric.prReleaseCount]: ' PRs',\r\n  [PullRequestMetric.prReleaseCountQ]: ' PRs',\r\n  [PullRequestMetric.prReleasePendingCount]: ' PRs',\r\n  [PullRequestMetric.prRejected]: ' PRs',\r\n  [PullRequestMetric.prOpened]: ' PRs',\r\n}\r\n\r\nexport const getUnits = (metric: PullRequestMetric) => units[metric];\r\n","import { css } from '@emotion/react';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\nconst gridStyle = (columns: number) => css`\r\n  &.Grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(${columns}, ${100 / columns}%);\r\n    grid-template-rows: 1fr;\r\n    grid-gap: 20px;\r\n    padding: 20px;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  columns?: number;\r\n}\r\n\r\nconst Grid: React.FC<PropsWithChildren<Props>> = ({ children, columns = 2 }) => (\r\n  <div css={ () => gridStyle(columns) } className=\"Grid\">\r\n    { children }\r\n  </div>\r\n);\r\n\r\nexport default Grid;\r\n","import { css } from '@emotion/react';\r\nimport React from 'react';\r\nimport { KPI_BG, KPI_COLOR, KPI_VALUE_COLOR } from '../../styles';\r\n\r\nconst kpiStyle = () => css`\r\n  &.KPI {\r\n    background-color: ${ KPI_BG };\r\n    border-radius: 0.35rem;\r\n    color: ${ KPI_COLOR };\r\n    display: inline-flex;\r\n    flex-direction: column;\r\n    padding: 2rem;\r\n    max-width: 320px;\r\n    width: 100%;\r\n    word-wrap: break-word;\r\n\r\n    .KPI-label,\r\n    .KPI-value {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .KPI-label {\r\n      font-size: 1.1rem;\r\n      line-height: 1.4rem;\r\n      margin-bottom: 0.75rem;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    .KPI-value {\r\n      color: ${ KPI_VALUE_COLOR };\r\n      font-size: 2.1rem;\r\n      letter-spacing: -0.04rem;\r\n      line-height: 2.1rem;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst Kpi: React.FC<Props> = ({ label, value }) => (\r\n  <div css={ kpiStyle } className=\"KPI\">\r\n    <span className=\"KPI-label\">\r\n      { label }\r\n    </span>\r\n\r\n    <span className=\"KPI-value\">\r\n      { value }\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default Kpi;\r\n","import { getLargestAvailableTimeUnit } from \"../../utils/dates\";\r\n\r\nexport const formatTick = (value: number, units: string): string => {\r\n  if (units === 's') {\r\n    return getLargestAvailableTimeUnit(value);\r\n  }\r\n\r\n  return `${ value }${ units }`;\r\n}\r\n\r\n\r\ninterface TooltipProps {\r\n  color: string;\r\n  dataKey: string;\r\n  fill: string;\r\n  name: string;\r\n  unit: string;\r\n  value: number;\r\n}\r\n\r\nexport const formatTooltip = (value: number, name: string, { unit }: TooltipProps) => {\r\n  if (unit === 's') {\r\n    return getLargestAvailableTimeUnit(value);\r\n  }\r\n\r\n  return value\r\n};\r\n","import { css } from '@emotion/react';\r\nimport React, { useRef } from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart as D3AreaChart,\r\n  CartesianGrid,\r\n  ReferenceLine,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis\r\n} from 'recharts';\r\nimport { PullRequestMetric } from '../../../apiClient/types';\r\nimport { getUnits } from '../../../constants/units';\r\nimport { useResize } from '../../../hooks';\r\nimport {\r\n  BARCHART_AXIS_COLOR,\r\n  LINECHART_GRID_COLOR,\r\n  LINECHART_LINE_COLOR,\r\n  LINECHART_REFERENCELINE_COLOR\r\n} from '../../../styles';\r\nimport { PullRequestMetrics } from '../../../types';\r\nimport { getLargestAvailableTimeUnit } from '../../../utils/dates';\r\nimport { toDecimals } from '../../../utils/formatters';\r\nimport { getEnumLabelFromValue } from '../../../utils/objects';\r\nimport Grid from '../../Grid';\r\nimport Kpi from '../../Kpi';\r\nimport { formatTick, formatTooltip } from '../utils';\r\n\r\nconst lineChartStyle = () => css`\r\n  &.AreaChart {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    .recharts-wrapper {\r\n      padding-top: 20px;\r\n    }\r\n\r\n    .recharts-rectangle.recharts-tooltip-cursor {\r\n      display: none !important;\r\n    }\r\n\r\n    .recharts-cartesian-axis-tick-value tspan {\r\n      color: ${ BARCHART_AXIS_COLOR };\r\n      display: block;\r\n      font-size: 1rem;\r\n      max-width: 45px !important;\r\n      width: 45px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  data?: PullRequestMetrics;\r\n  metric: PullRequestMetric;\r\n}\r\n\r\nconst AreaChart: React.FC<Props> = ({ data, metric }) => {\r\n  const parentRef = useRef<HTMLDivElement>(null);\r\n  const { rect } = useResize(parentRef);\r\n  const metricName = getEnumLabelFromValue(metric);\r\n  const units = getUnits(metric);\r\n\r\n  const dataPoints = (data?.[0].values ?? [])?.map(point => {\r\n    const value = point?.values?.[0];\r\n    return {\r\n      [metric]: value ? parseInt(value, 10) : 0,\r\n    };\r\n  });\r\n\r\n  const averageValue = dataPoints.reduce(\r\n    (avg, point) => avg + (point[metric] as number),\r\n    0\r\n  ) / dataPoints.length;\r\n\r\n  const avgKpi = units === 's'\r\n    ? getLargestAvailableTimeUnit(averageValue)\r\n    : `${ toDecimals(averageValue, 2, 0) }${ units }`;\r\n\r\n  const maxValue = dataPoints.reduce(\r\n    (max, point) => (point[metric] as number) > max ? point[metric] as number : max,\r\n    0\r\n  );\r\n\r\n  const maxKpi = units === 's'\r\n    ? getLargestAvailableTimeUnit(maxValue)\r\n    : `${ toDecimals(maxValue, 2, 0) }${ units }`;\r\n  \r\n\r\n  return (\r\n    <div css={ lineChartStyle } className=\"AreaChart\" ref={ parentRef }>\r\n      <Grid columns={2}>\r\n        <Kpi label={`Average ${ metricName }`} value={ avgKpi } />\r\n        <Kpi label={`Maximum ${ metricName }`} value={ maxKpi } />\r\n      </Grid>\r\n\r\n      <D3AreaChart\r\n        data={ dataPoints }\r\n        height={ rect?.height ?? 300}\r\n        width={ rect?.width ?? 400 }\r\n      >\r\n        <defs>\r\n          <linearGradient id=\"lineGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"0%\" stopColor={ LINECHART_LINE_COLOR } stopOpacity={ 0.2 }/>\r\n            <stop offset=\"100%\" stopColor={ LINECHART_LINE_COLOR } stopOpacity={ 0.2 }/>\r\n          </linearGradient>\r\n        </defs>\r\n\r\n        <CartesianGrid stroke={ LINECHART_GRID_COLOR } />\r\n\r\n        <XAxis dataKey=\"name\" tickCount={ 5 } tickLine={ false } />\r\n\r\n        <YAxis\r\n          tickCount={ 4 }\r\n          tickFormatter={ (v) => formatTick(v, units) }\r\n          tickLine={ false }\r\n        />\r\n\r\n        <Tooltip formatter={ formatTooltip } />\r\n\r\n        <ReferenceLine\r\n          stroke={ LINECHART_REFERENCELINE_COLOR }\r\n          strokeDasharray=\"6 2\"\r\n          strokeWidth={ 2 }\r\n          y={ averageValue }\r\n        />\r\n\r\n        <Area\r\n          dataKey={ metric }\r\n          dot={ { stroke: 'red', strokeWidth: 2 } }\r\n          fill=\"url(#lineGradient)\"\r\n          fillOpacity={ 1 }\r\n          name={ metricName }\r\n          stroke={ LINECHART_LINE_COLOR }\r\n          type=\"monotone\"\r\n          unit={ units }\r\n        />\r\n      </D3AreaChart>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AreaChart;\r\n","import { css } from '@emotion/react';\r\nimport React, { useRef } from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart as D3BarChart,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis\r\n} from 'recharts';\r\nimport { PullRequestMetric } from '../../../apiClient/types';\r\nimport { getUnits } from '../../../constants/units';\r\nimport { useResize } from '../../../hooks';\r\nimport {\r\n  BARCHART_AXIS_COLOR,\r\n  BARCHART_BAR_BG,\r\n  BARCHART_GRID_COLOR\r\n} from '../../../styles';\r\nimport { PullRequestMetrics } from '../../../types';\r\nimport { getLargestAvailableTimeUnit } from '../../../utils/dates';\r\nimport { toDecimals } from '../../../utils/formatters';\r\nimport { getEnumLabelFromValue } from '../../../utils/objects';\r\nimport { curateRepositoryName } from '../../../utils/repoNames';\r\nimport Grid from '../../Grid';\r\nimport Kpi from '../../Kpi';\r\nimport { formatTick, formatTooltip } from '../utils';\r\n\r\nconst barChartStyle = () => css`\r\n  &.BarChart {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    .recharts-wrapper {\r\n      padding-top: 20px;\r\n    }\r\n\r\n    .recharts-rectangle.recharts-tooltip-cursor {\r\n      display: none !important;\r\n    }\r\n\r\n    .recharts-cartesian-axis-tick-value tspan {\r\n      color: ${ BARCHART_AXIS_COLOR };\r\n      display: block;\r\n      font-size: 1rem;\r\n      max-width: 45px !important;\r\n      width: 45px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  data?: PullRequestMetrics;\r\n  metric: PullRequestMetric;\r\n}\r\n\r\nconst BarChart: React.FC<Props> = ({ data, metric }) => {\r\n  const parentRef = useRef<HTMLDivElement>(null);\r\n  const { rect } = useResize(parentRef);\r\n  const metricName = getEnumLabelFromValue(metric);\r\n  const units = getUnits(metric);\r\n\r\n  const dataBars = (data ?? [])?.map(bar => ({\r\n    name: curateRepositoryName(bar.for.repositories[0]),\r\n    [metric]: parseInt(bar.values?.[0]?.values?.[0], 10),\r\n  }));\r\n\r\n  const averageValue = dataBars.reduce(\r\n    (avg, point) => avg + (point[metric] as number),\r\n    0\r\n  ) / dataBars.length;\r\n\r\n  const avgKpi = units === 's'\r\n    ? getLargestAvailableTimeUnit(averageValue)\r\n    : `${ toDecimals(averageValue, 2, 0) }${ units }`;\r\n\r\n  const maxValue = dataBars.reduce(\r\n    (max, point) => (point[metric] as number) > max ? point[metric] as number : max,\r\n    0\r\n  );\r\n\r\n  const maxKpi = units === 's'\r\n    ? getLargestAvailableTimeUnit(maxValue)\r\n    : `${ toDecimals(maxValue, 2, 0) }${ units }`;\r\n\r\n  return (\r\n    <div css={ barChartStyle } className=\"BarChart\" ref={ parentRef }>\r\n      <Grid columns={2}>\r\n        <Kpi label={`Average ${ metricName }`} value={ avgKpi } />\r\n        <Kpi label={`Maximum ${ metricName }`} value={ maxKpi } />\r\n      </Grid>\r\n\r\n      <D3BarChart\r\n        data={ dataBars }\r\n        height={ rect?.height ?? 300 }\r\n        width={ rect?.width ?? 400 }\r\n      >\r\n        <CartesianGrid vertical={ false } stroke={ BARCHART_GRID_COLOR } />\r\n\r\n        <XAxis dataKey=\"name\" tickLine={ false } />\r\n\r\n        <YAxis\r\n          tickCount={ 9 }\r\n          tickFormatter={ (v) => formatTick(v, units) }\r\n          tickLine={ false }\r\n        />\r\n\r\n        <Tooltip formatter={ formatTooltip } />\r\n\r\n        <Bar\r\n          dataKey={ metric }\r\n          fill={ BARCHART_BAR_BG }\r\n          name={ metricName }\r\n          maxBarSize={ 50 }\r\n          unit={ units }\r\n        />\r\n      </D3BarChart>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default BarChart;\r\n","export const curateRepositoryName = (str: string) =>\r\n  str.replace('github.com/athenianco/', '');\r\n  ","import React from 'react';\r\n\r\nconst LoadingIdicator: React.FC = () => (\r\n  <p>Some fancy loading indicator...</p>\r\n);\r\n\r\nexport default LoadingIdicator;\r\n","import React from 'react';\r\nimport { PullRequestMetric } from '../../../../apiClient/types';\r\nimport Card from '../../../../components/Card';\r\nimport { BarChart, AreaChart } from '../../../../components/Charts';\r\nimport Grid from '../../../../components/Grid';\r\nimport LoadingIdicator from '../../../../components/LoadingIndicator';\r\nimport { LoadingState, PullRequestMetrics } from '../../../../types';\r\n\r\ninterface Props {\r\n  aggregatedMetrics?: PullRequestMetrics\r\n  groupedMetrics?: PullRequestMetrics\r\n  loadingAggregated: LoadingState;\r\n  loadingGrouped: LoadingState;\r\n  metric: PullRequestMetric;\r\n}\r\n\r\nconst MetricCharts: React.FC<Props> = ({ aggregatedMetrics, groupedMetrics, loadingAggregated, loadingGrouped, metric }) => (\r\n  <Grid columns={ 2 }>\r\n    <Card>\r\n      { loadingAggregated === 'loading' && (\r\n        <LoadingIdicator />\r\n      ) }\r\n\r\n      { loadingAggregated === 'success' && (\r\n        <AreaChart data={ aggregatedMetrics } metric={ metric } />\r\n      ) }\r\n    </Card>\r\n\r\n    <Card>\r\n      { loadingGrouped === 'loading' && (\r\n        <LoadingIdicator />\r\n      ) }\r\n\r\n      { loadingGrouped === 'success' && (\r\n        <BarChart data={ groupedMetrics } metric={ metric } />\r\n      ) }\r\n    </Card>\r\n  </Grid>\r\n);\r\n\r\nexport default MetricCharts;\r\n","import React from 'react';\r\nimport ReactSelect, { ActionMeta as AM, MultiValue as MV, SingleValue as SV, } from 'react-select';\r\nimport {\r\n  DROPDOWN_BG,\r\n  DROPDOWN_COLOR,\r\n  DROPDOWN_ITEM_BG,\r\n  DROPDOWN_ITEM_BG_HOVER,\r\n  DROPDOWN_ITEM_COLOR,\r\n  INPUT_BG,\r\n  INPUT_BORDER,\r\n  INPUT_BORDER_HOVER\r\n} from '../../../styles';\r\n\r\nexport interface DropdownItem {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nexport type ActionMeta = AM<DropdownItem>;\r\nexport type MultipleValue = readonly DropdownItem[];\r\nexport type SingleValue = DropdownItem;\r\n\r\ninterface Props {\r\n  isMultiple?: boolean;\r\n  onChange: (newValue: SingleValue | MultipleValue, actionMeta: ActionMeta) => void;\r\n  options: DropdownItem[];\r\n  placeholder?: string;\r\n}\r\n\r\nconst Dropdown: React.FC<Props> = ({ isMultiple = false, onChange, options, placeholder }) => {\r\n  const handleChange = (newValue: SV<DropdownItem> | MV<DropdownItem>, actionMeta: AM<DropdownItem>) => {\r\n    if (!isMultiple && !(newValue instanceof Array) && newValue) {\r\n      onChange(newValue, actionMeta);\r\n    }\r\n\r\n    if (isMultiple && (newValue instanceof Array)) {\r\n      onChange(newValue, actionMeta);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ReactSelect\r\n      className=\"Dropdown\"\r\n      isMulti={ isMultiple }\r\n      onChange={ handleChange }\r\n      options={ options }\r\n      placeholder={ placeholder }\r\n      styles={{\r\n        control: (base, props) => ({\r\n          ...base,\r\n          backgroundColor: INPUT_BG,\r\n          border: `1px solid ${( props.isFocused || props.menuIsOpen) ? INPUT_BORDER_HOVER : INPUT_BORDER }`,\r\n          borderRadius: '0.4rem',\r\n          boxShadow: 'none',\r\n          height: 40,\r\n          fontSize: '1.2rem',\r\n          maxWidth: 190,\r\n\r\n          ':hover': {\r\n            borderColor: INPUT_BORDER_HOVER,\r\n          }\r\n        }),\r\n        valueContainer: (base) => ({\r\n          ...base,\r\n          color: DROPDOWN_ITEM_COLOR,\r\n        }),\r\n        placeholder: (base) => ({\r\n          ...base,\r\n          color: 'inherit',\r\n        }),\r\n        indicatorsContainer: (base) => ({\r\n          ...base,\r\n          color: DROPDOWN_COLOR,\r\n        }),\r\n        indicatorSeparator: () => ({\r\n          display: 'none',\r\n        }),\r\n        dropdownIndicator: (base) => ({\r\n          ...base,\r\n          color: 'inherit'\r\n        }),\r\n        menu: (base) => ({\r\n          ...base,\r\n          border: 'none',\r\n          boxShadow: 'none',\r\n          borderRadius: 0,\r\n          backgroundColor: DROPDOWN_BG,\r\n          minWidth: 240,\r\n          width: 240,\r\n        }),\r\n        menuList: (base, props) => ({\r\n          ...base,\r\n          border: `1px solid ${INPUT_BORDER }`,\r\n          borderRadius: '0.4rem',\r\n          paddingBottom: 0,\r\n          paddingTop: props.isMulti ? undefined : 0,\r\n        }),\r\n        option: (base, props) => ({\r\n          ...base,\r\n          alignItems: 'center',\r\n          backgroundColor: DROPDOWN_ITEM_BG,\r\n          borderBottom: `1px solid ${ INPUT_BORDER }`,\r\n          color: DROPDOWN_ITEM_COLOR,\r\n          cursor: 'pointer',\r\n          display: 'flex',\r\n          fontSize: '1.2rem',\r\n          lineHeight: 1.4,\r\n          minHeight: 36,\r\n          padding: '0 1.2rem',\r\n          wordBreak: 'break-word',\r\n          overflow: 'hidden',\r\n\r\n          ':hover': {\r\n            backgroundColor: DROPDOWN_ITEM_BG_HOVER,\r\n          },\r\n\r\n          ':first-child': {\r\n            borderTop: props.isMulti ? `1px solid ${ INPUT_BORDER }` : undefined,\r\n          },\r\n          ':last-child': {\r\n            borderBottom: props.isMulti ? undefined : 'none',\r\n          }\r\n        })\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { PropsWithChildren, useMemo } from 'react';\r\nimport { PullRequestMetric } from '../../../../apiClient/types';\r\nimport Button from '../../../../components/Button';\r\nimport Dropdown, { MultipleValue, SingleValue } from '../../../../components/Forms/Dropdown';\r\nimport Toolbar from '../../../../components/Toolbar';\r\nimport { getDropdownItemsFromEnum } from '../../../../utils/objects';\r\n\r\ninterface Props {\r\n  activeTab?: string;\r\n  activeTabHasBeenSetup: boolean;\r\n  onMetricChange: (newValue: SingleValue | MultipleValue) => void;\r\n  removeActiveTab: () => void;\r\n  renderTabs: () => JSX.Element;\r\n  tabs: string[];\r\n}\r\n\r\nconst TabsSection: React.FC<PropsWithChildren<Props>> = ({\r\n  activeTab,\r\n  activeTabHasBeenSetup,\r\n  children,\r\n  onMetricChange,\r\n  removeActiveTab,\r\n  renderTabs,\r\n  tabs,\r\n}) => {\r\n  const metricOptions = useMemo(() =>\r\n    getDropdownItemsFromEnum(PullRequestMetric)\r\n      .filter(opt => !tabs.includes(opt.label)),\r\n    [tabs]\r\n  );\r\n\r\n  return (\r\n  <>\r\n    { renderTabs() }\r\n\r\n    { !!activeTab && (\r\n      <>\r\n        <Toolbar\r\n          fullWidth\r\n          left={\r\n            <>\r\n              { !activeTabHasBeenSetup && (\r\n                <Dropdown\r\n                  onChange={ onMetricChange }\r\n                  options={ metricOptions }\r\n                  placeholder='Select a metric...'\r\n                />\r\n              )}\r\n            </>\r\n          }\r\n          right={ (\r\n            <Button onClick={ removeActiveTab }>\r\n              Close\r\n            </Button>\r\n          ) }\r\n        />\r\n      </>\r\n    ) }\r\n\r\n    { children }\r\n  </>\r\n)};\r\n\r\nexport default TabsSection;\r\n","import { css } from '@emotion/react';\r\nimport React, { useState } from 'react';\r\nimport { PullRequestMetric } from '../../apiClient/types';\r\nimport { MultipleValue, SingleValue } from '../../components/Forms/Dropdown';\r\nimport Typography from '../../components/Typography';\r\nimport { tabHasBeenSetup, useDynamicTabs, usePullRequestMetrics } from '../../hooks';\r\nimport MainLayout from '../../layouts/MainLayout';\r\nimport { getDefaultDateRange } from '../../utils/dates';\r\nimport Header from './components/Header';\r\nimport MetricCharts from './components/TabContent';\r\nimport TabsSection from './components/TabsSection';\r\n\r\nconst homescreenStyle = () => css`  \r\n  &.Homescreen {\r\n    .Content {\r\n      padding: 0 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Homescreen: React.FC = () => {\r\n  // Default values & options\r\n  const { startDate: s, endDate: e } = getDefaultDateRange();\r\n\r\n  // Tabs\r\n  const { activeTab, removeActiveTab, renameTab, renderTabs, tabs } = useDynamicTabs();\r\n  const activeTabHasBeenSetup = tabHasBeenSetup(activeTab);\r\n\r\n  // User inputs\r\n  const [dateRange, setDateRange] = useState<[Date, Date]>([s, e]);\r\n\r\n  // Data results\r\n  const {\r\n    loadingAggregated,\r\n    aggregatedMetrics,\r\n    loadingGrouped,\r\n    groupedMetrics\r\n  } = usePullRequestMetrics({\r\n    dateRange,\r\n    metric: activeTabHasBeenSetup ? activeTab as PullRequestMetric : undefined,\r\n  });\r\n\r\n  const onDateRangeChange = (startDate: Date, endDate?: Date) => {\r\n    setDateRange([startDate, endDate as Date])\r\n  }\r\n\r\n  const onMetricChange = (newValue: SingleValue | MultipleValue) => {\r\n    renameTab(activeTab as string, (newValue as SingleValue)?.label);\r\n  }\r\n\r\n  return (\r\n    <MainLayout>\r\n      <div css={homescreenStyle} className=\"Homescreen\">\r\n        <Header onDateRangeChange={ onDateRangeChange } />\r\n\r\n        <div className=\"Content\">\r\n          <Typography type=\"title1\">\r\n            <h2>Insights</h2>\r\n          </Typography>\r\n\r\n          <TabsSection\r\n            activeTab={ activeTab }\r\n            activeTabHasBeenSetup={ activeTabHasBeenSetup }\r\n            onMetricChange={ onMetricChange }\r\n            removeActiveTab={ removeActiveTab }\r\n            renderTabs={ renderTabs }\r\n            tabs={ tabs }\r\n          >\r\n            { !!activeTabHasBeenSetup && (\r\n              <MetricCharts\r\n                aggregatedMetrics={ aggregatedMetrics }\r\n                groupedMetrics={ groupedMetrics }\r\n                loadingAggregated={ loadingAggregated }\r\n                loadingGrouped={ loadingGrouped }\r\n                metric={ activeTab as PullRequestMetric }\r\n              />\r\n            ) }\r\n          </TabsSection>\r\n        </div>\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default Homescreen;\r\n","import { ROOT } from \"./constants/clientRoutes\";\r\nimport Homescreen from \"./containers/Homescreen\";\r\n\r\nconst routes = [\r\n  {\r\n    Component: Homescreen,\r\n    exact: true,\r\n    path: ROOT,\r\n  }\r\n]\r\n\r\nexport default routes;\r\n","import { useEffect, useState } from \"react\"\r\nimport apiClient from \"../apiClient\";\r\nimport { Granularity, PullRequestMetric } from \"../apiClient/types\";\r\nimport { createMetricsFromServer, createPullRequestParamsToServer } from \"../modelCreators\";\r\nimport { LoadingState, PullRequestMetrics, PullRequestMetricsFilters } from \"../types\";\r\n\r\ninterface Params {\r\n  dateRange: [Date, Date];\r\n  metric?: PullRequestMetric;\r\n}\r\n\r\n/**\r\n * Fetch pull request metrics each time any filter\r\n * is changed/updated\r\n */\r\nexport const usePullRequestMetrics = ({ dateRange: [dateFrom, dateTo], metric }: Params) => {\r\n  const [loadingAggregated, setLoadingAggregated] = useState<LoadingState>('idle');\r\n  const [aggregatedMetrics, setAggregatedMetrics] = useState<PullRequestMetrics>();\r\n\r\n  /**\r\n   * Data for AreaChart\r\n   */\r\n  const fetchAggregatedMetrics = async (filters: PullRequestMetricsFilters) => {\r\n    try {\r\n      // Control the request's status\r\n      setLoadingAggregated('loading');\r\n\r\n      // Fetch data\r\n      const params = createPullRequestParamsToServer(filters, [Granularity.alignedWeek], false);\r\n      const data = await apiClient.metrics.getRepositoryPullRequestsMetrics(params);\r\n\r\n      // Create a valid model for the UI\r\n      const prMetrics = createMetricsFromServer(data);\r\n\r\n      // Store it in the state, so data is reactive\r\n      setAggregatedMetrics(prMetrics);\r\n\r\n      // Set the request's status as successful\r\n      setLoadingAggregated('success')\r\n    } catch (error) {\r\n      setLoadingAggregated('error');\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const [loadingGrouped, setLoadingGrouped] = useState<LoadingState>('idle');\r\n  const [groupedMetrics, setGroupedMetrics] = useState<PullRequestMetrics>();\r\n\r\n  /**\r\n   * Data for BarChart\r\n   */\r\n  const fetchGroupedMetrics = async (filters: PullRequestMetricsFilters) => {\r\n    try {\r\n      // Control the request's status\r\n      setLoadingGrouped('loading');\r\n\r\n      // Fetch data\r\n      const params = createPullRequestParamsToServer(filters, [Granularity.all], true);\r\n      const data = await apiClient.metrics.getRepositoryPullRequestsMetrics(params);\r\n\r\n      // Create a valid model for the UI\r\n      const prMetrics = createMetricsFromServer(data);\r\n\r\n      // Store it in the state, so data is reactive\r\n      setGroupedMetrics(prMetrics);\r\n\r\n      // Set the request's status as successful\r\n      setLoadingGrouped('success')\r\n    } catch (error) {\r\n      setLoadingGrouped('error');\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dateFrom && dateTo && metric) {\r\n      fetchAggregatedMetrics({ dateFrom, dateTo, metric })\r\n      fetchGroupedMetrics({ dateFrom, dateTo, metric });\r\n    }\r\n  }, [dateFrom, dateTo, metric])\r\n\r\n  return {\r\n    loadingAggregated,\r\n    aggregatedMetrics,\r\n    loadingGrouped,\r\n    groupedMetrics,\r\n  }\r\n};\r\n","export const ROOT = '/'","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport './styles/fonts.css';\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <Switch>\n      { routes.map(({ Component, exact, path }) => (\n        <Route\n          key={ path }\n          component={ Component }\n          exact={ exact }\n          path={ path }\n        />\n      ))}\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { css, Global } from '@emotion/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DEFAULT_BG, DEFAULT_COLOR } from './styles';\n\nconst resetStyle = () => css`\n  /* Box sizing rules */\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  /* Remove default margin */\n  body,\n  h1,\n  h2,\n  h3,\n  h4,\n  p,\n  figure,\n  blockquote,\n  dl,\n  dd {\n    margin: 0;\n  }\n\n  /* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\n  ul[role='list'],\n  ol[role='list'] {\n    list-style: none;\n  }\n\n  html {\n    font-size: 62.5%;\n    font-family: sans-serif;\n    line-height: 1.15;\n  }\n\n  /* Set core root defaults */\n  html:focus-within {\n    scroll-behavior: smooth;\n  }\n\n  /* Set core body defaults */\n  body {\n    background-color: ${ DEFAULT_BG };\n    min-height: 100vh;\n    color: ${ DEFAULT_COLOR };\n    font-family: 'Cerebri',\n      -apple-system,\n      BlinkMacSystemFont,\n      'Segoe UI',\n      Roboto,\n      'Helvetica Neue',\n      Arial,\n      sans-serif,\n      'Apple Color Emoji',\n      'Segoe UI Emoji',\n      'Segoe UI Symbol',\n      'Noto Color Emoji';\n    font-size: 1.2rem;\n    font-weight: 400;\n    line-height: 1.5;\n    text-align: left;\n    text-size-adjust: 100%;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n\n  /* A elements that don't have a class get default styles */\n  a:not([class]) {\n    text-decoration-skip-ink: auto;\n  }\n\n  /* Make images easier to work with */\n  img,\n  picture {\n    max-width: 100%;\n    display: block;\n  }\n\n  /* Inherit fonts for inputs and buttons */\n  input,\n  button,\n  textarea,\n  select {\n    font: inherit;\n  }\n\n  /* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n  @media (prefers-reduced-motion: reduce) {\n    html:focus-within {\n    scroll-behavior: auto;\n    }\n    \n    *,\n    *::before,\n    *::after {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      scroll-behavior: auto !important;\n    }\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Global styles={ resetStyle } />\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}